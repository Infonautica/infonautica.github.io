Я не призываю людей делать свои стандарты и методологии, просто демонстрирую свою

## Зачем?
Зачем нужна собственная методология? Ровно как мы создаем структуру и архитектуру приложения, в коей мы разбираемся, тем же образом мы можем писать и SCSS. Для меня все дело заключается в микро-оптимизации процесса разработки. Рассмотрим поэтапно процесс внесения простой правки в какой-нибудь элемент, например -- изменить направление текста заголовка .section__heading

1) Открыть стили
2) Найти стили для .section__heading
3) Определить наличие text-align
4) Изменить значение

Простой порядок действий, к слову, что тут оптимизировать? Для этого нужно попробовать мыслить как программа. Так вот программа не может просто сказать, указан ли у селектора text-align, программа должна пройтись по каждому свойству, и если оно есть, проверить значение. Словно цикл по ключам объекта в JS.  Методология написания и форматирования CSS/SCSS кода как раз оптимизирует этот процесс.

## Принцип разбиения на категории
Вся суть состоит в том, чтобы разделять визуально код на части по их назначению. Вот пример сгруппированного и разделенного кода:
`
.action__btn {
    display: block;
    height: 50px;
    width: 100%;
    padding: 10px 30px;
    border: 1px white solid;
    margin-bottom: 30px;
    text-align: center;
    text-transform: uppercase;
    font-family: $font;
    font-size: 20px;
    font-weight: $reg;
    cursor: pointer;
    opacity: 0.7;
}
`

### Как я его группирую и в каком порядке прописываю свойства:
Сперва идет определение отображения, то есть стили формирующие элемент. Первым всегда идет свойство display, если таковое имеется. Дальше идет height и width. Следующими, сразу после размеров, я бы указал тип позиционирования и координаты, если понадобится. Потом по порядку стили влияющие на блоковую модель элемента в порядке “Из центра наружу”, то есть сперва идут паддинги, потом границы, потом уже внешние отступы. В эту же подкатегорию свойств войдут указания для flexbox.

Следующая подкатегория -- свойства относящиеся к оформлению текста. Сперва я прописываю свойства для текста text-align, text-transform и прочие, а уже после них можно описывать свойства для шрифта.

В конце стилей элемента у меня отдельная категория, в нее будут входить свойства cursor, z-index, opacity, visibility, float и всяческие вендорные стили типа -webkit-appearance.

## Есть ли в этом смысл?
Я считаю, что да. Это позволяет читать код и постепенно формировать представление о том как он выглядит, даже не видя его. Сперва я представляю блок он, флексбокс или вообще строковый элемент. Потом представляю его размеры, отступы и границы. Дальше понимаю как в нем ведет себя текст и выглядит шрифт. В конце я заканчиваю представление прочими свойствами, понимая, прозрачный ли он, прибит ли к какому-нибудь краю.

## Заключение
Еще раз, я не призываю никого использовать это, но предлагаю вам выверить свой стиль написания кода. Если вы чувствуете, что то или иное свойство должно быть на каком-то месте -- сделайте из этого систему и следуйте ей. Добро пожаловать в мир перфекционизма и компульсий
